/*
 * This file is generated by jOOQ.
 */
package ru.itis.model.jooq.schema.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.model.jooq.schema.tables.AssociativeListenerMusic;
import ru.itis.model.jooq.schema.tables.pojos.AssociativeListenerMusicEntity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssociativeListenerMusicRecord extends UpdatableRecordImpl<AssociativeListenerMusicRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.associative_listener_music.music_id</code>.
     */
    public void setMusicId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.associative_listener_music.music_id</code>.
     */
    public UUID getMusicId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.associative_listener_music.listener_id</code>.
     */
    public void setListenerId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.associative_listener_music.listener_id</code>.
     */
    public UUID getListenerId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AssociativeListenerMusic.ASSOCIATIVE_LISTENER_MUSIC_ENTITY.MUSIC_ID;
    }

    @Override
    public Field<UUID> field2() {
        return AssociativeListenerMusic.ASSOCIATIVE_LISTENER_MUSIC_ENTITY.LISTENER_ID;
    }

    @Override
    public UUID component1() {
        return getMusicId();
    }

    @Override
    public UUID component2() {
        return getListenerId();
    }

    @Override
    public UUID value1() {
        return getMusicId();
    }

    @Override
    public UUID value2() {
        return getListenerId();
    }

    @Override
    public AssociativeListenerMusicRecord value1(UUID value) {
        setMusicId(value);
        return this;
    }

    @Override
    public AssociativeListenerMusicRecord value2(UUID value) {
        setListenerId(value);
        return this;
    }

    @Override
    public AssociativeListenerMusicRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssociativeListenerMusicRecord
     */
    public AssociativeListenerMusicRecord() {
        super(AssociativeListenerMusic.ASSOCIATIVE_LISTENER_MUSIC_ENTITY);
    }

    /**
     * Create a detached, initialised AssociativeListenerMusicRecord
     */
    public AssociativeListenerMusicRecord(UUID musicId, UUID listenerId) {
        super(AssociativeListenerMusic.ASSOCIATIVE_LISTENER_MUSIC_ENTITY);

        setMusicId(musicId);
        setListenerId(listenerId);
    }

    /**
     * Create a detached, initialised AssociativeListenerMusicRecord
     */
    public AssociativeListenerMusicRecord(AssociativeListenerMusicEntity value) {
        super(AssociativeListenerMusic.ASSOCIATIVE_LISTENER_MUSIC_ENTITY);

        if (value != null) {
            setMusicId(value.getMusicId());
            setListenerId(value.getListenerId());
        }
    }
}
